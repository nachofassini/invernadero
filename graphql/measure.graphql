enum SensorType {
    Humidity
    Temperature
    Lighting
    SoilHumidity
    Co2
}

enum Measures {
    insideTemperature
    outsideTemperature
    insideHumidity
    outsideHumidity
    soilHumidity
    co2
    lighting
}

enum SensorMeasureUnits {
    Humidity @enum(value: "%")
    Temperature @enum(value: "ÂºC")
    Lighting @enum(value: "%")
    SoilHumidity @enum(value: "%")
    Co2 @enum(value: "ppm")
}

interface Sensors {
    consumption: Float

    "Greenhouse temperature"
    insideTemperature: Float!

    "External temperature"
    outsideTemperature: Float!

    "Greenhouse humidity"
    insideHumidity: Float!

    "External temperature"
    outsideHumidity: Float!

    "Greenhouse soil humidity"
    soilHumidity: Float!

    "Co2 ppm"
    co2: Float

    "Outside lightning percentage"
    lighting: Float!
}

type Measure implements Sensors {
    "Unique primary key."
    id: ID!

    "Electricity consumption."
    consumption: Float

    "Greenhouse temperature"
    insideTemperature: Float! @rename(attribute: "inside_temperature")

    "External temperature"
    outsideTemperature: Float! @rename(attribute: "outside_temperature")

    "Greenhouse humidity"
    insideHumidity: Float! @rename(attribute: "inside_humidity")

    "External temperature"
    outsideHumidity: Float! @rename(attribute: "outside_humidity")

    "Greenhouse soil humidity"
    soilHumidity: Float! @rename(attribute: "soil_humidity")

    "Co2 ppm"
    co2: Float

    "Greenhouse light percentage"
    lighting: Float!

    "When the measure was taken"
    createdAt: DateTime! @rename(attribute: "created_at")

    "When the measure was last updated."
    updatedAt: DateTime! @rename(attribute: "updated_at")
}

type MeasureStatistic implements Sensors {
    date: DateTime!

    "Electricity consumption."
    consumption: Float

    "Greenhouse temperature"
    insideTemperature: Float! @rename(attribute: "inside_temperature")

    "External temperature"
    outsideTemperature: Float! @rename(attribute: "outside_temperature")

    "Greenhouse humidity"
    insideHumidity: Float! @rename(attribute: "inside_humidity")

    "External temperature"
    outsideHumidity: Float! @rename(attribute: "outside_humidity")

    "Greenhouse soil humidity"
    soilHumidity: Float! @rename(attribute: "soil_humidity")

    "Co2 ppm"
    co2: Float

    "Greenhouse light percentage"
    lighting: Float!
}

extend type Query {
    "Find a single stage by an identifying attribute."
    measure("Search by primary key." id: ID! @eq): Measure! @find

    "Get last measure"
    lastMeasure: Measure! @first(scopes: ["last"])

    # "Get last {limit} measures"
    lastMeasures(limit: Int = 5, offset: Int = 0): [Measure!]!

    # "Get last measures paginated"
    lastMeasuresPaginated: [Measure!]! @paginate(scopes: ["last"])

    "Get measures by date"
    measures(
        createdAt: DateTimeRange! @rename(attribute: "created_at") @whereBetween
    ): [Measure!]! @all

    "Get measures average grouped by day"
    measuresAverageGroupedByDay(
        createdAt: DateRange! @rename(attribute: "created_at") @whereBetween
    ): [MeasureStatistic!]!

    # "Get measures average grouped by hour"
    measuresAverageGroupedByHour(
        createdAt: DateTimeRange! @rename(attribute: "created_at") @whereBetween
    ): [MeasureStatistic!]!

    # "Get measures average of a period"
    measuresAverage(
        createdAt: DateTimeRange! @rename(attribute: "created_at") @whereBetween
    ): MeasureStatistic!
}
